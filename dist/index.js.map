{"version":3,"file":"index.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/history/index.js","../src/index.ts"],"sourcesContent":["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n","import {createBrowserHistory} from \"history\";\nimport {atom, Atom,  ManualCleanup, RxSet} from \"data0\";\n\nexport type InputRouteData<T> = {\n    path: string,\n    handler?: T,\n    exact?: boolean,\n    // CAUTION 使用 redirect 的  route 一定是 exact match\n    redirect?: string|[string, true],\n    strict?: boolean\n}\n\n\ntype RouteNode<T> = {\n    children: Map<string, RouteNode<T>>,\n    // 只能有一个 dynamic param name。\n    dynamicChildren?: {\n        paramName: string,\n        node: RouteNode<T>\n    },\n    handler?: T,\n    redirect?: string|[string, true],\n    strictHandler: any\n}\ntype Params = { [k: string]: any }\ntype RouteParams = {[k: string]: any}\ntype RouteMatchResult = {\n    handler?: any,\n    path?: string,\n    isExactMatch?:boolean,\n    matchPath?: string,\n    params?: RouteParams,\n    searchParams: Params\n    redirect? : string| [string, true]\n}\n\n// strict 是用来处理既有参数，又有精确匹配的场景的，例如 /project/:id  和 /project/new\n//  优先精确匹配。\nexport class Router<T> extends ManualCleanup{\n    public pathname:Atom<string> = atom('');\n    public handler: Atom<T|undefined> = atom(undefined);\n    public params: Atom<{[k: string]: any}> = atom({});\n    public searchParams: Atom<Params> = atom({})\n    public path: Atom<string> = atom('');\n    public children: RxSet<Router<T>> = new RxSet([])\n    public map: RouteNode<T> = {\n        children: new Map<string, RouteNode<T>>(),\n        handler: undefined,\n        redirect: undefined,\n        strictHandler: undefined\n    }\n    private unlisten: () => void\n    constructor(\n        public data: InputRouteData<T>[],\n        public history = createBrowserHistory(),\n        public parentPath: string = '',\n        public parent?: Router<T>\n    ) {\n        super()\n        data.forEach(i => this.addOne(i))\n\n        this.unlisten = this.history.listen(this.onHistoryChange)\n        this.onHistoryChange()\n        if (this.parent) {\n            this.parent.children.add(this)\n        }\n    }\n    destroy() {\n        this.unlisten()\n        this.parent?.children.delete(this)\n    }\n    addOne(data: InputRouteData<T>) {\n        const pathArr = data.path.split('/').filter(Boolean)\n        let routeNode = this.map\n        pathArr.forEach((frag) => {\n            if (frag.startsWith(':')) {\n                if (routeNode.dynamicChildren) {\n                    throw new Error('only one dynamic param is allowed')\n                }\n\n                routeNode.dynamicChildren = {\n                    paramName: frag.slice(1),\n                    node: {\n                        children: new Map<string, RouteNode<T>>(),\n                        handler: undefined,\n                        strictHandler: undefined\n                    }\n                }\n                routeNode = routeNode.dynamicChildren.node\n            } else {\n                const children = routeNode.children\n                routeNode = children.get(frag)!\n                if (!routeNode) {\n                    children.set(\n                        frag,\n                        (routeNode = {\n                            children: new Map<string, RouteNode<T>>(),\n                            handler: undefined,\n                            strictHandler: undefined\n                        })\n                    )\n                }\n            }\n        })\n\n        if (data.strict) {\n            routeNode.strictHandler = data.handler\n        } else {\n            routeNode.handler = data.handler\n        }\n        routeNode.redirect = data.redirect\n    }\n    add(data: InputRouteData<T>[]) {\n        data.forEach(d => this.addOne(d))\n        this.onHistoryChange()\n    }\n    recognize(inputPath: string): RouteMatchResult {\n        const relativePath = inputPath.startsWith(this.parentPath)\n            ? inputPath.slice(this.parentPath.length)\n            : inputPath\n        const inputPathArr = relativePath.split('/').filter(Boolean)\n        let pointer: RouteNode<T> = this.map\n        const resultPathArr: string[] = []\n        const matchedPathArr: string[] = []\n        const params: { [k: string]: any } = {}\n        const searchParams: { [key: string]: string } = {}\n        let isExactMatch = true\n        // 1. 优先使用 children 匹配\n        for (let frag of inputPathArr) {\n            const strictNode = pointer.children.get(frag)\n            if (strictNode) {\n                resultPathArr.push(frag)\n                matchedPathArr.push(frag)\n                pointer = strictNode\n            } else if (pointer.dynamicChildren) {\n                params[pointer.dynamicChildren.paramName] = frag\n                resultPathArr.push(pointer.dynamicChildren.paramName)\n                matchedPathArr.push(frag)\n                pointer = pointer.dynamicChildren.node\n            } else {\n                isExactMatch = false\n                break\n            }\n        }\n\n        const search = new URLSearchParams(this.history.location.search)\n        for (const [key, value] of search) {\n            searchParams[key] = value\n        }\n\n        return {\n            handler: pointer.handler || pointer.strictHandler,\n            redirect: pointer.redirect,\n            params,\n            searchParams,\n            isExactMatch,\n            path: `/${resultPathArr.join('/')}`,\n            matchPath: `/${matchedPathArr.join('/')}`\n        }\n    }\n    onHistoryChange = () => {\n        this.pathname(this.history.location.pathname)\n        const result = this.recognize(this.history.location.pathname)\n        this.handler(result.handler)\n        this.path(result.path)\n        this.params(result.params)\n        this.searchParams(result.searchParams)\n\n        // CAUTION 使用 redirect 的 route 一定是 exact match\n        if (result.redirect && result.isExactMatch) {\n            const [redirectPath, reload] = Array.isArray(result.redirect)\n                ? result.redirect\n                : [result.redirect, false]\n            this.push(redirectPath, reload)\n        }\n    }\n\n    redirect(absolutePath: string, reload = false) {\n        if (reload) {\n            window.location.href = absolutePath\n        } else {\n            this.history.push(absolutePath)\n        }\n    }\n    push(path: string, reload = false) {\n        // push 默认是到当前 router 的 root path 下，要接上 parentPath。\n        // 也可以使用 `//` 来强行到所有 router 的 root path 下。\n        if (path.startsWith('//')) {\n            return this.redirect(path.slice(1), reload)\n        }\n\n        if (reload) {\n            window.location.href = `${this.parentPath}${path}`\n        } else {\n            this.history.push(`${this.parentPath}${path}`)\n        }\n    }\n\n    updateSearchParams(newParams: Record<string, string | undefined>) {\n        // 使用 History API 更新 URL,而不是使用 rxRouter.replace\n        const newUrl = new URL(window.location.href)\n        const currentParams = { ...this.searchParams.raw }\n\n        Object.entries(newParams).forEach(([key, value]) => {\n            if (value === undefined) {\n                newUrl.searchParams.delete(key)\n                delete currentParams[key]\n            } else {\n                newUrl.searchParams.set(key, value)\n                currentParams[key] = value\n            }\n        })\n\n        window.history.pushState({}, '', newUrl)\n        this.searchParams(currentParams)\n    }\n\n    derive(path: string = this.path.raw) {\n        const base = this\n        const basePath = `${base.parentPath}${path}`\n        return class SubRouter extends Router<T> {\n            constructor(public data: InputRouteData<T>[], public subParentPath: string = '' ) {\n                super(data, base.history, `${basePath}${subParentPath}`, base)\n            }\n        }\n    }\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory} from 'history'\n"],"names":["_extends","n","t","r","Action","readOnly","obj","warning","cond","message","BeforeUnloadEventType","HashChangeEventType","PopStateEventType","createBrowserHistory","options","_options","_options$window","window","globalHistory","getIndexAndLocation","_window$location","pathname","search","hash","state","blockedPopTx","handlePop","blockers","nextAction","_getIndexAndLocation","nextIndex","nextLocation","delta","index","go","applyTx","action","_getIndexAndLocation2","location","listeners","createEvents","createHref","to","createPath","getNextLocation","parsePath","createKey","getHistoryStateAndUrl","allowTx","retry","_getIndexAndLocation3","push","_getHistoryStateAndUr","historyState","url","replace","_getHistoryStateAndUr2","history","listener","blocker","unblock","promptBeforeUnload","createHashHistory","_options2","_options2$window","_parsePath","_parsePath$pathname","_parsePath$search","_parsePath$hash","_getIndexAndLocation4","_getIndexAndLocation5","_getIndexAndLocation6","getBaseHref","base","href","hashIndex","_getIndexAndLocation7","_getHistoryStateAndUr3","_getHistoryStateAndUr4","createMemoryHistory","_options3","_options3$initialEntr","initialEntries","initialIndex","entries","entry","clamp","lowerBound","upperBound","event","handlers","fn","handler","arg","_ref","_ref$pathname","_ref$search","_ref$hash","path","parsedPath","searchIndex","Router","ManualCleanup","data","parentPath","parent","atom","RxSet","result","redirectPath","reload","i","_a","pathArr","routeNode","frag","children","d","inputPath","inputPathArr","pointer","resultPathArr","matchedPathArr","params","searchParams","isExactMatch","strictNode","key","value","absolutePath","newParams","newUrl","currentParams","basePath","subParentPath"],"mappings":"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","x_google_ignoreList":[0,1]}